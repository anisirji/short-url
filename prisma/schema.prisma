// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



// User model
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  urls      ShortenedURL[]
  clicks    Click[]

  @@map("users")
}

// URL model
model ShortenedURL {
  id              Int       @id @default(autoincrement())
  originalUrl     String
  shortenedUrl    String    @unique
  qrCode          String?   // Path to QR code image or QR data
  totalViews      Int       @default(0)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  // Relations
  userId          Int
  user            User      @relation(fields: [userId], references: [id])
  clicks          Click[]

  @@map("shortened_urls")
}

// Clicks for tracking information
model Click {
  id          Int       @id @default(autoincrement())
  userId      Int?      // Nullable for unauthenticated users
  urlId       Int
  clickedAt   DateTime  @default(now())
  ipAddress   String?
  userAgent   String?   // Information about user's browser
  location    String?   // Optional location information
  referer     String?   // Page where the user came from (if applicable)

  // Relations
  user        User?     @relation(fields: [userId], references: [id])
  shortenedUrl ShortenedURL @relation(fields: [urlId], references: [id])

  @@map("clicks")
}

